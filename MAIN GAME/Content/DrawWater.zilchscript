class DrawWater : ZilchComponent
{
  var Timer : Real = 0;
  [Property]
  var Delay : Real = 0.2;
  
  var MyWaters : Array[Cog] = Array[Cog](1){};
  var WaterIndex : Integer = 0; 
  
  var Brush : Cog = null;
  
  [Property]
  var Detail : Real = 7;
  
  var Active : Boolean = true;
  
  function Initialize(init : CogInitializer)
  {
    Zero.Connect(this.Space, Events.LogicUpdate, this.OnLogicUpdate);
    this.Brush = this.Space.FindObjectByName("Brush");
    this.Delay /= this.Detail;
  }

  function OnLogicUpdate(event : UpdateEvent)
  {
    if(!Zero.Mouse.IsButtonDown(MouseButtons.Left))
      this.Active = false;
      
    if(this.Active)
    {
      if(this.Timer > this.Delay)
      {
        var amt = Math.Ceil(event.Dt / this.Delay);
        for(var i = 0; i < amt; ++i)
        {
          this.MyWaters.Add(this.Space.CreateAtPosition(Archetype.Water, Real3(this.Brush.Transform.WorldTranslation.XY, this.Brush.Transform.WorldTranslation.Z - 1)));          
          ++this.WaterIndex;
          this.MyWaters[this.WaterIndex].AttachTo(this.Owner);
          this.MyWaters[this.WaterIndex].Transform.Scale = Real3(this.MyWaters[this.WaterIndex].Transform.Scale.XY / this.Detail, 5);
        }
        this.Timer = 0;        
      }
      this.Timer += event.Dt;
    }  
  }
}

class CurtainScript : ZilchComponent
{
  var Camera : Cog = null;
  var Player : Cog = null;
  var FadeToBlack : Boolean = false;
  
  function Initialize(init : CogInitializer)
  {
    Zero.Connect(this.Space, Events.LogicUpdate, this.OnLogicUpdate);
    this.Camera = this.Space.FindObjectByName("GameCamera");
    this.Player = this.Space.FindObjectByName("Ball");
  }

  function OnLogicUpdate(event : UpdateEvent)
  {
    var goalOpacity =  1 / (this.Player.Transform.Translation.Y + 25);
    if(goalOpacity < 0)
    {
      this.FadeToBlack = true;
      goalOpacity = 1;
    }
    var adaptiveOpacity = Math.Lerp(this.Owner.Sprite.VertexColor.Z, goalOpacity, 0.1);
    Console.WriteLine(goalOpacity);
    this.Owner.Transform.Translation = Real3(this.Camera.Transform.Translation.XY, 0.9);
    this.Owner.Sprite.VertexColor = Real4(this.Owner.Sprite.VertexColor.XYZ, goalOpacity);
    if(this.FadeToBlack)
    {  
      Console.WriteLine("ASS");    
      this.Owner.Sprite.VertexColor = Math.Lerp(this.Owner.Sprite.VertexColor, Real4(0,0,0,goalOpacity), event.Dt * 10);
    }
  }
}

class Movment : ZilchComponent
{ 
 //This is the graph which you're moving on 
  [Property]
  var X : Real = 0; 
  //This is the max height you can go 
  var MaxY : Real = 3;
  //This determines how quickly the X changes
  var MoveSpeed : Real = 0.05;  
  //This changes how high the X goes A(x)^2
  var Amplitude = 2; 
  //This is how quickly the thing moves leftwards
  var MoveLeft : Real = 0; 

  function Initialize(init : CogInitializer)
  {
    this.MaxY *= this.Amplitude - 0.5; 
    Zero.Connect(this.Space, Events.LogicUpdate, this.OnLogicUpdate);
  }

  function OnLogicUpdate(event : UpdateEvent)
  {
    //Makes it so the whole thing moves leftwards 
    this.MoveLeft += 0.05; 
    //The Location of the X 
    Console.WriteLine("`this.X`");
    this.X += this.MoveSpeed; 
    //follow an x square pattern
    if(Math.Abs(this.X) > this.MaxY){
        this.MoveSpeed *= -1;
        
      }
    //if it's going rightwards

    
    this.Owner.Transform.Translation = Real3(this.X, this.X * this.X / this.Amplitude - 3, 3);
    //When it reaches a certain angle, go back
    //Change the speed of movement based on it's location
    
  }
}


